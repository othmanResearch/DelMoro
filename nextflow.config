// nextflow.config file

params {

// Interactive Design while Running DelMoro

include {DelMoroWelcome	}	from './logos' 
include {DelMoroParams	}	from './logos' 
include {DelMoroVersion	} 	from './logos' 
include {DelMoroError	} 	from './logos' 


// Params 

params.refGenome 	= "./Reference_Genome/reference.fa"		// Reference file path

params.RawReads 	= "./CSVs/1_samplesheetForRawQC.csv" 		// Raw reads paths 
params.ToBeTrimmed 	= "./CSVs/2_SamplesheetForTrimming.csv"		// Raw reads paths + trimmomatic parameters
params.TrimmedReads 	= "./CSVs/3_samplesheetForAssembly.csv"		// Trimmed read paths 
params.BamFiles		= "./CSVs/4_samplesheetForBamFiles.csv"  			// Bam files paths 

params.knwonSite1	= "./knownsites/1000g_gold_standard.indels.filtered.vcf" 	// knownsites should be .vcf  
params.knwonSite2 	= "./knownsites/GCF.38.filtered.renamed.vcf"			

// Indexes params 

params.BamIndex		= "./outdir/Indexes/BamFiles/*.bai"					   	  // Bam Files Indexes

params.ALIGNERIndex	= "./outdir/Indexes/Reference/reference.fa.{0123,amb,ann,bwt.2bit.64,pac}"         // Bwa-mem2 		Reference Indexes
params.Dictionary	= "./outdir/Indexes/Reference/reference.dict"				       // GATK Dictionary 	Reference Index
params.SamtoolsIndex	= "./outdir/Indexes/Reference/reference.fa.fai"  			              // Samtools fai 		Reference Index

params.KnSite1Idx 	= "./outdir/Indexes/knownSites/1000g_gold_standard.indels.filtered.vcf.idx"    // Known site 1 Index
params.KnSite2Idx 	= "./outdir/Indexes/knownSites/GCF.38.filtered.renamed.vcf.idx"		   //  Known site 2 Index

params.cpus 		= 2
params.outdir		= "./outdir"

params.generate		= null  // The default parameter generates vcf for all inputs ${onlyVCF} or A cohorte Gvcf ${cohorteGVCF}    

}

profiles {
 conda {
        process.conda = "$projectDir/DelMoro.yml"
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        conda.enabled = false
        docker.enabled = true
        singularity.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    singularity {
        conda.enabled = false
        singularity.enabled = true
        singularity.autoMounts = true
        docker.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
    podman {
        conda.enabled = false
        podman.enabled = true
        singularity.enabled = false
        docker.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
    shifter {
        conda.enabled = false
        shifter.enabled = true
        singularity.enabled = false
        docker.enabled = false
        podman.enabled = false
        charliecloud.enabled = false
    }
    charliecloud {
        conda.enabled = false
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
 }
